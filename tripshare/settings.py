"""
Django settings for tripshare project.

Generated by 'django-admin startproject' using Django 1.8.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# The region to connect to when storing files.
AWS_REGION = os.environ.get('AWS_REGION')

# The AWS access key used to access the storage buckets.
AWS_ACCESS_KEY_ID = os.environ.get('AWS_ACCESS_KEY_ID')

# The AWS secret access key used to access the storage buckets.
AWS_SECRET_ACCESS_KEY = os.environ.get('AWS_SECRET_ACCESS_KEY')

# The S3 bucket used to store uploaded files.
AWS_S3_BUCKET_NAME = "tripsharephotos"

# The S3 calling format to use to connect to the bucket.
AWS_S3_CALLING_FORMAT = "boto.s3.connection.OrdinaryCallingFormat"

# A prefix to add to the start of all uploaded files.
# AWS_S3_KEY_PREFIX = ""

# Whether to enable querystring authentication for uploaded files.
AWS_S3_BUCKET_AUTH = False

# The expire time used to access uploaded files.
# AWS_S3_MAX_AGE_SECONDS = 60*60*24*365

# A custom URL prefix to use for public-facing URLs for uploaded files.
# AWS_S3_PUBLIC_URL = ""

# Whether to set the storage class of uploaded files to REDUCED_REDUNDANCY.
# AWS_S3_REDUCED_REDUNDANCY = False

# A dictionary of additional metadata to set on the uploaded files.
# If the value is a callable, it will be called with the path of the file on S3.
# AWS_S3_METADATA = {}

# The expire time used to access static files.
# AWS_S3_MAX_AGE_SECONDS_STATIC = 60*60*24*365  # 1 year.


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

DEFAULT_FILE_STORAGE = "django_s3_storage.storage.S3Storage"
MEDIA_URL = 'https://%s.s3-%s.amazonaws.com/' % (AWS_S3_BUCKET_NAME, AWS_REGION)

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.gis',
    'django_s3_storage', # https://github.com/etianen/django-s3-storage
    'trips',
    'leaflet', # https://github.com/makinacorpus/django-leaflet
)

LEAFLET_CONFIG = {
    'DEFAULT_CENTER': (30, -10),
    'DEFAULT_ZOOM': 3,
    'MIN_ZOOM': 2,
    'MAX_ZOOM': 18,
    'TILES': [('Streets', 'https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token=%s' % os.environ.get('MAPBOX_API_TOKEN'), {
        'attribution': 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery Â© <a href="http://mapbox.com">Mapbox</a>', 
        'id': os.environ.get('MAPBOX_ID'), 
        'accessToken': os.environ.get('MAPBOX_API_TOKEN'), 
    })],
}





MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

ROOT_URLCONF = 'tripshare.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'tripshare.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.contrib.gis.db.backends.postgis',
        'NAME': os.environ.get('DATABASE_NAME', ''),
        'USER': os.environ.get('DATABASE_USER', ''),
        'PASSWORD': os.environ.get('DATABASE_PASSWORD', ''),
        'HOST': os.environ.get('DATABASE_HOST', ''),
        'PORT': os.environ.get('DATABASE_PORT', ''),
    }
}


# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.abspath(os.path.join(BASE_DIR, '../static'))
